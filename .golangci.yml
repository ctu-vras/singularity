run:
  concurrency: 2
  timeout: 5m
  build-tags:
    - apparmor
    - e2e_test
    - fakeroot_engine
    - libsubid
    - seccomp
    - selinux
    - singularity_engine
    - sylog

linters:
  disable-all: true
  enable-all: false
  enable:
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - copyloopvar
    - decorder
    - dogsled
    - dupl
    - dupword
    - forcetypeassert
    - gofumpt
    - goimports
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - grouper
    - ineffassign
    - interfacebloat
    - maintidx
    - misspell
    - nakedret
    - nolintlint
    - prealloc
    - reassign
    - revive
    - staticcheck
    - typecheck
    - unparam
    - unused
    - usetesting
    - whitespace

linters-settings:
  misspell:
    locale: US

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  exclude:
    # EXC0004 excluded due to spurious "should have signature XYZ" errors on
    # MarshalJSON methods. See
    # https://golangci-lint.run/usage/false-positives/#exc0004 for more
    # information.
    - EXC0004
  exclude-rules:
    - linters:
        - gosec
      # G107 disallows making http calls to a URL stored in a variable
      # G204 disallows exec.Command() with a command/args stored in variables
      # G306 disallows creation of files with permissions greater than 0600
      text: "^(G107|G204|G306):"
    - path: 'e2e/'
      linters:
        # The usetesting linter shows a lot of lint for env var handling and
        # tempdir creation in e2e tests. It's not really valid lint - the e2e
        # tests were explicitly written to keep tempdirs in a per-run outer dir,
        # and env var handling is complicated by the e2e.SingularityCmd
        # execution flow etc.
        - usetesting
  exclude-files:
    - "internal/pkg/util/user/cgo_lookup_unix.go"
